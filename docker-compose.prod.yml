version: '3.1'
services:
  easyappointments:
    image: 'alextselegidis/easyappointments:1.4.3'
    restart: always
    environment:
      - BASE_URL=https://${DOMAIN:-localhost}
      - DEBUG_MODE=FALSE
      - DB_HOST=mysql
      - DB_NAME=${DB_NAME:-easyappointments}
      - DB_USERNAME=${DB_USERNAME:-root}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
      - LANGUAGE=${APP_LANGUAGE:-english}
      - TIMEZONE=${APP_TIMEZONE:-UTC}
      - GOOGLE_SYNC_FEATURE=${GOOGLE_SYNC:-FALSE}
      - GOOGLE_PRODUCT_NAME=${GOOGLE_PRODUCT_NAME}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    volumes:
      - ./uploads:/var/www/html/uploads
      - ./config:/var/www/html/config
    networks:
      - app-network
    depends_on:
      - mysql

  mysql:
    image: 'mysql:8.0'
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./docker/mysql:/var/lib/mysql
      - ./docker/mysql-backup:/backup
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-secret}
      - MYSQL_DATABASE=${DB_NAME:-easyappointments}
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
    depends_on:
      - easyappointments
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: always
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  app-network:
    driver: bridge
